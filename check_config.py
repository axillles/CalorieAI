#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞
"""

def check_config():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –±–æ—Ç–∞"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ö–ë–ñ–£ –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞...\n")
    
    try:
        from config.settings import settings
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram Bot Token
        print("üì± Telegram Bot Token:")
        if not settings.TELEGRAM_BOT_TOKEN:
            print("   ‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            print("   üí° –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —É @BotFather –≤ Telegram")
        elif settings.TELEGRAM_BOT_TOKEN == "your_telegram_bot_token_here":
            print("   ‚ö†Ô∏è  –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∏–º–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω")
            print("   üí° –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω")
        else:
            print("   ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º OpenAI API Key
        print("\nü§ñ OpenAI API Key:")
        if not settings.OPENAI_API_KEY:
            print("   ‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            print("   üí° –ü–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á –Ω–∞ https://platform.openai.com/api-keys")
        elif settings.OPENAI_API_KEY == "your_openai_api_key_here":
            print("   ‚ö†Ô∏è  –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∏–º–µ—Ä–Ω—ã–π –∫–ª—é—á")
            print("   üí° –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∫–ª—é—á")
        else:
            print("   ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Supabase URL
        print("\nüóÑÔ∏è  Supabase URL:")
        if not settings.SUPABASE_URL:
            print("   ‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            print("   üí° –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –Ω–∞ supabase.com")
        elif settings.SUPABASE_URL == "https://your-project-id.supabase.co":
            print("   ‚ö†Ô∏è  –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∏–º–µ—Ä–Ω—ã–π URL")
            print("   üí° –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL")
        else:
            print("   ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Supabase Key
        print("\nüîë Supabase Key:")
        if not settings.SUPABASE_KEY:
            print("   ‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            print("   üí° –ü–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞ Supabase")
        elif settings.SUPABASE_KEY == "your_supabase_anon_key_here":
            print("   ‚ö†Ô∏è  –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∏–º–µ—Ä–Ω—ã–π –∫–ª—é—á")
            print("   üí° –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∫–ª—é—á")
        else:
            print("   ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        print("\n‚öôÔ∏è  –î—Ä—É–≥–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        print(f"   OpenAI Model: {settings.OPENAI_MODEL}")
        print(f"   Max Tokens: {settings.MAX_TOKENS}")
        print(f"   Max Image Size: {settings.MAX_IMAGE_SIZE / (1024*1024):.1f} MB")
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        print("\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        
        if (not settings.TELEGRAM_BOT_TOKEN or 
            settings.TELEGRAM_BOT_TOKEN == "your_telegram_bot_token_here"):
            print("   1. –ü–æ–ª—É—á–∏—Ç–µ Telegram Bot Token —É @BotFather")
            print("   2. –î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ —Ñ–∞–π–ª .env")
        
        if (not settings.OPENAI_API_KEY or 
            settings.OPENAI_API_KEY == "your_openai_api_key_here"):
            print("   3. –ü–æ–ª—É—á–∏—Ç–µ OpenAI API Key –Ω–∞ platform.openai.com")
            print("   4. –î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ —Ñ–∞–π–ª .env")
        
        if (not settings.SUPABASE_URL or 
            settings.SUPABASE_URL == "https://your-project-id.supabase.co" or
            not settings.SUPABASE_KEY or 
            settings.SUPABASE_KEY == "your_supabase_anon_key_here"):
            print("   5. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Supabase –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)")
            print("   6. –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL –∏–∑ setup_supabase.sql")
        
        print("\n   7. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python main.py")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if check_config():
        print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    else:
        print("\n‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å!")

if __name__ == "__main__":
    main()

