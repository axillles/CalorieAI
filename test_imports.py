#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–º–ø–æ—Ä—Ç–æ–≤ –∏ –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
"""

def test_imports():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –∏–º–ø–æ—Ä—Ç—ã"""
    try:
        print("–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã...")
        
        # –¢–µ—Å—Ç 1: –û—Å–Ω–æ–≤–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
        import asyncio
        import logging
        print("‚úì asyncio –∏ logging –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –¢–µ—Å—Ç 2: Telegram
        from telegram.ext import Application, CommandHandler, MessageHandler, filters
        from telegram import Update
        print("‚úì telegram –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –¢–µ—Å—Ç 3: –ù–∞—Å—Ç—Ä–æ–π–∫–∏
        from config.settings import settings
        print("‚úì –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –¢–µ—Å—Ç 4: –ú–æ–¥–µ–ª–∏
        from models.data_models import User, FoodImage, NutritionData, DailyReport
        print("‚úì –º–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –¢–µ—Å—Ç 5: –°–µ—Ä–≤–∏—Å—ã
        from services.supabase_service import SupabaseService
        from services.openai_service import OpenAIService
        print("‚úì —Å–µ—Ä–≤–∏—Å—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –¢–µ—Å—Ç 6: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        from handlers.command_handler import CommandHandler as BotCommandHandler
        from handlers.message_handler import MessageHandler as BotMessageHandler
        print("‚úì –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –¢–µ—Å—Ç 7: –£—Ç–∏–ª–∏—Ç—ã
        from utils.report_generator import ReportGenerator
        print("‚úì —É—Ç–∏–ª–∏—Ç—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –¢–µ—Å—Ç 8: –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
        from config.database import db_manager
        print("‚úì –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞")
        
        print("\nüéâ –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω—ã!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_settings():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    try:
        print("\n–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...")
        from config.settings import settings
        
        print(f"TELEGRAM_BOT_TOKEN: {'‚úì —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if settings.TELEGRAM_BOT_TOKEN else '‚ùå –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        print(f"OPENAI_API_KEY: {'‚úì —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if settings.OPENAI_API_KEY else '‚ùå –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        print(f"SUPABASE_URL: {'‚úì —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if settings.SUPABASE_URL else '‚ùå –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        print(f"SUPABASE_KEY: {'‚úì —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if settings.SUPABASE_KEY else '‚ùå –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        
        print(f"OPENAI_MODEL: {settings.OPENAI_MODEL}")
        print(f"MAX_TOKENS: {settings.MAX_TOKENS}")
        print(f"MAX_IMAGE_SIZE: {settings.MAX_IMAGE_SIZE}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        return False

def test_models():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        print("\n–¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö...")
        from models.data_models import User, FoodImage, NutritionData, DailyReport
        
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = User(telegram_id=123456, username="test_user")
        print(f"‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {user.telegram_id}")
        
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ –æ –µ–¥–µ
        food_image = FoodImage(user_id=1, image_url="test.jpg")
        print(f"‚úì –ó–∞–ø–∏—Å—å –æ –µ–¥–µ —Å–æ–∑–¥–∞–Ω–∞: {food_image.image_url}")
        
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–∏—Ç–∞–Ω–∏–∏
        nutrition = NutritionData(
            food_image_id=1,
            calories=500,
            protein=25,
            fats=20,
            carbs=50,
            food_name="–¢–µ—Å—Ç–æ–≤–æ–µ –±–ª—é–¥–æ",
            confidence=0.8
        )
        print(f"‚úì –î–∞–Ω–Ω—ã–µ –æ –ø–∏—Ç–∞–Ω–∏–∏ —Å–æ–∑–¥–∞–Ω—ã: {nutrition.food_name}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–æ–¥–µ–ª–µ–π: {e}")
        return False

def test_report_generator():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç—á–µ—Ç–æ–≤"""
    try:
        print("\n–¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç—á–µ—Ç–æ–≤...")
        from utils.report_generator import ReportGenerator
        
        # –¢–µ—Å—Ç –¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
        nutrition_data = {"calories": 1500, "protein": 100, "fats": 50, "carbs": 200}
        report = ReportGenerator.format_daily_report(nutrition_data)
        print("‚úì –î–Ω–µ–≤–Ω–æ–π –æ—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω")
        
        # –¢–µ—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        welcome = ReportGenerator.get_welcome_message()
        print("‚úì –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –æ—Ç—á–µ—Ç–æ–≤: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ö–ë–ñ–£ –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞...\n")
    
    tests = [
        test_imports,
        test_settings,
        test_models,
        test_report_generator
    ]
    
    passed = 0
    total = len(tests)
    
    for test in tests:
        if test():
            passed += 1
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤: {passed}/{total} –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ.")
        print("\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å –≤–∞—à–∏–º–∏ API –∫–ª—é—á–∞–º–∏")
        print("2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Supabase –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π: python main.py")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.")

if __name__ == "__main__":
    main()
